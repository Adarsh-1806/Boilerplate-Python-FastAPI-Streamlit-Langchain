version: "3.9"

services:
  postgres:
    image: postgres:14
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: tx_manager
      # Add this to ensure PostgreSQL accepts connections from other containers
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./app/db/queries.sql:/docker-entrypoint-initdb.d/queries.sql
      - ./app/db/verify-init.sql:/docker-entrypoint-initdb.d/02-verify-init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app_network

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: backend
    depends_on:
      postgres:
        condition: service_healthy
    # environment:
    #   # Note the hostname is the service name 'postgres'
    #   DATABASE_URL: "postgresql://postgres:password@postgres:5432/tx_manager"
    ports:
      - "8000:8000"
    networks:
      - app_network

  # Rest of your services remain the same...

  streamlit:
    build:
      context: .
      dockerfile: streamlit.Dockerfile
    container_name: streamlit
    depends_on:
      - backend
    environment:
      API_BASE_URL: "http://backend:8000/homefinance"
    ports:
      - "8501:8501"
    networks:
      - app_network

volumes:
  postgres_data:

networks:
  app_network:
    driver: bridge
